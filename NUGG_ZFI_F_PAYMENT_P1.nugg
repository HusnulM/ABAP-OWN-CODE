<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZFI_F_PAYMENT_P1">
 <PROG NAME="ZFI_F_PAYMENT" VARCL="X" SUBC="1" RMAND="110" RLOAD="E" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="1">
    <textElement ID="I" KEY="001" ENTRY="Selection Parameters" LENGTH="40 "/>
    <textElement ID="I" KEY="002" ENTRY="Payment Type" LENGTH="22 "/>
    <textElement ID="R" ENTRY="Print Form Payment" LENGTH="70 "/>
    <textElement ID="S" KEY="OP1" ENTRY="        Outgoing to BP" LENGTH="38 "/>
    <textElement ID="S" KEY="OP2" ENTRY="        Outgoing to others" LENGTH="38 "/>
    <textElement ID="S" KEY="RAD1" ENTRY="        Incoming from BP" LENGTH="38 "/>
    <textElement ID="S" KEY="RAD2" ENTRY="        Incoming from others" LENGTH="38 "/>
    <textElement ID="S" KEY="P_BUKRS" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_BELNR" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_BUDAT" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_KUNNR" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_LIFNR" ENTRY="D       ." LENGTH="9 "/>
   </language>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="Selection Parameters" LENGTH="40 "/>
    <textElement ID="I" KEY="002" ENTRY="Payment Type" LENGTH="22 "/>
    <textElement ID="R" ENTRY="Print Form Payment" LENGTH="18 "/>
    <textElement ID="S" KEY="OP1" ENTRY="        Outgoing to Vendor" LENGTH="26 "/>
    <textElement ID="S" KEY="OP2" ENTRY="        Outgoing to others" LENGTH="26 "/>
    <textElement ID="S" KEY="OP3" ENTRY="        Outgoing to Customer" LENGTH="28 "/>
    <textElement ID="S" KEY="P_BUKRS" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="RAD1" ENTRY="        Incoming from Customer" LENGTH="30 "/>
    <textElement ID="S" KEY="RAD2" ENTRY="        Incoming from others" LENGTH="28 "/>
    <textElement ID="S" KEY="RAD3" ENTRY="        Incoming from Vendor" LENGTH="28 "/>
    <textElement ID="S" KEY="S_BELNR" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_BUDAT" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_KUNNR" ENTRY="D       ." LENGTH="9 "/>
    <textElement ID="S" KEY="S_LIFNR" ENTRY="D       ." LENGTH="9 "/>
   </language>
  </textPool>
  <dynpros>
   <dynpro PROG="ZFI_F_PAYMENT" DNUM="0100" FNUM="0100" BZMX="200 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="200 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="Main Screen">
    <dynprofield FNAM="CONTAINER" DIDX="00C8" FLG1="00" FLG2="30" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="FF" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="03" ADEZ="03"/>
    <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE status_0100.

PROCESS AFTER INPUT.
  MODULE user_command_0100.</dynproflowsource>
   </dynpro>
  </dynpros>
  <pfstatus>
   <pfstatus_sta CODE="PF100" MODAL="D" ACTCODE="000001" PFKCODE="000001" BUTCODE="0001" INT_NOTE="PF100"/>
   <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Back"/>
   <pfstatus_fun CODE="BPRINT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PRINT" ICON_ID="@0X@" FUN_TEXT="Print" ICON_TEXT="Print Document"/>
   <pfstatus_fun CODE="CNCL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Cancel"/>
   <pfstatus_fun CODE="DALL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_DESELECT_ALL" ICON_ID="@4D@" FUN_TEXT="Deselect All" ICON_TEXT="Deselect All"/>
   <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Exit"/>
   <pfstatus_fun CODE="PRINT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PRINT" ICON_ID="@0X@" FUN_TEXT="Print"/>
   <pfstatus_fun CODE="SALL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_ALL" ICON_ID="@4B@" FUN_TEXT="Select All" ICON_TEXT="Select All"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="01" PFNO="06"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="02" PFNO="07"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="03" PFNO="09"/>
   <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="06" FUNCODE="SALL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="07" FUNCODE="DALL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="09" FUNCODE="BPRINT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="CNCL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="15" FUNCODE="EXIT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="86" FUNCODE="PRINT" FUNNO="001"/>
   <pfstatus_set STATUS="PF100" FUNCTION="BACK"/>
   <pfstatus_set STATUS="PF100" FUNCTION="BPRINT"/>
   <pfstatus_set STATUS="PF100" FUNCTION="CNCL"/>
   <pfstatus_set STATUS="PF100" FUNCTION="DALL"/>
   <pfstatus_set STATUS="PF100" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="PF100" FUNCTION="PRINT"/>
   <pfstatus_set STATUS="PF100" FUNCTION="SALL"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000001" MODAL="D" INT_NOTE="PF100"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="D" INT_NOTE="PF100"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" MODAL="D" INT_NOTE="PF100"/>
   <pfstatus_tit CODE="TL100" TEXT="&amp;"/>
  </pfstatus>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report ZFI_F_PAYMENT
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;---------------------------------------------------------------------*
REPORT zfi_f_payment.

INCLUDE zfi_f_payment_01.
INCLUDE zfi_f_payment_cls.
INCLUDE zfi_f_payment_02.
INCLUDE zfi_f_payment_03.
INCLUDE zfi_f_payment_04.

START-OF-SELECTION.
  PERFORM get_data.</source>
 </PROG>
 <PROG NAME="ZFI_F_PAYMENT_01" VARCL="X" SUBC="I" RMAND="110" RLOAD="E" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZFI_F_PAYMENT_01" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Include          ZFI_F_PAYMENT_01
*&amp;---------------------------------------------------------------------*
TABLES : acdoca.

DATA :
  lt_data    TYPE TABLE OF zcds_fi_form_payment,
  lt_prnt    TYPE TABLE OF zcds_fi_form_payment,
  lt_clrdoc  TYPE TABLE OF zcds_fi_form_payment,
  lt_clrdoc2 TYPE TABLE OF zcds_fi_form_payment,
  ls_data    TYPE zcds_fi_form_payment,
  ls_prnt    TYPE zcds_fi_form_payment,
  p_pytyp    TYPE blart,
  ls_header  TYPE zsf_payment_hdr,
  lt_print   TYPE TABLE OF zsf_payment_item,
  lt_total   TYPE TABLE OF zsf_payment_item,
  ls_print   TYPE zsf_payment_item,
  ls_total   TYPE zsf_payment_item,
  lt_bsad    TYPE TABLE OF bsad_view,
  lt_bsak    TYPE TABLE OF bsak_view,
  ls_bsad    TYPE bsad_view,
  ls_bsak    TYPE bsak_view,
  ls_bkpf    TYPE bkpf.

DATA:
  ob_container TYPE REF TO cl_gui_custom_container,
  ob_grid      TYPE REF TO cl_gui_alv_grid.

DATA:
  it_fieldcat TYPE lvc_t_fcat,          &quot;----- For Field Catalog 1 ALV -----
  wa_fieldcat LIKE LINE OF it_fieldcat,
  is_lyout    TYPE lvc_s_layo.

DATA :
  v_ind           TYPE i VALUE 1,
  v_msg           TYPE string,
  cursorfield(20).

DATA :
  w_valid   TYPE char01,
  l_valid   TYPE c,
  lt_row_no TYPE lvc_t_roid,
  ls_row_no TYPE lvc_s_roid.

DATA count TYPE i.

DATA :
  ssfctrlop           TYPE ssfctrlop,
  wa_cparam           TYPE ssfctrlop,
  wa_output           TYPE ssfcompop,
  lw_job_output_info  TYPE ssfcrescl,
  ls_ssfctrlop        TYPE ssfctrlop,
  ls_ssfcompop        TYPE ssfcompop,
  ls_out_info         TYPE ssfcrescl,
  formname            TYPE  tdsfname,
  lv_fmname           TYPE rs38l_fnam,
  lv_size             TYPE int4,
  lt_lines            TYPE STANDARD TABLE OF tline,
  ls_lines            TYPE tline,
  lv_filename         TYPE string,
  lv_path             TYPE string,
  lv_fullpath         TYPE string,
  lv_action           TYPE i,
  ls_zcadt_parameters TYPE zcadt_parameters,
  ls_bukrs            TYPE bukrs,
  icount              TYPE i,
  i_shkzg             TYPE shkzg.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
  PARAMETERS:
    p_bukrs TYPE bukrs OBLIGATORY.
*    p_gjahr TYPE bkpf-gjahr.

  SELECT-OPTIONS:
  s_belnr FOR acdoca-belnr,
  s_budat FOR acdoca-budat,

  s_lifnr FOR acdoca-lifnr,
  s_kunnr FOR acdoca-kunnr.
SELECTION-SCREEN END OF BLOCK b1.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-002.
  PARAMETERS:
    rad1 RADIOBUTTON GROUP rad USER-COMMAND frad1 DEFAULT &apos;X&apos;,
    rad3 RADIOBUTTON GROUP rad,
    rad2 RADIOBUTTON GROUP rad,

    op1  RADIOBUTTON GROUP rad,
    op3  RADIOBUTTON GROUP rad,
    op2  RADIOBUTTON GROUP rad.

SELECTION-SCREEN END OF BLOCK b2.</source>
 </PROG>
 <PROG NAME="ZFI_F_PAYMENT_02" VARCL="X" SUBC="I" RMAND="110" RLOAD="E" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZFI_F_PAYMENT_02" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Include          ZFI_F_PAYMENT_02
*&amp;---------------------------------------------------------------------*


FORM get_data.
  REFRESH: lt_data, lt_prnt.

  IF rad1 = &apos;X&apos;. &quot;Incoming From Customer
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
      WHERE rbukrs = @p_bukrs AND
      belnr IN @s_belnr AND budat IN @s_budat AND
      blart IN (&apos;KZ&apos;,&apos;DZ&apos;)
*      blart = @p_pytyp
      GROUP BY rbukrs, belnr, gjahr, budat, blart,
               lifnr, augbl, auggj, kunnr, vname, cname, racct,
               txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.
  ELSEIF rad3 = &apos;X&apos;. &quot;Incoming From Vendor
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
    WHERE rbukrs = @p_bukrs AND
    belnr IN @s_belnr AND budat IN @s_budat AND
    blart IN (&apos;KZ&apos;,&apos;DZ&apos;)
*      blart = @p_pytyp
    GROUP BY rbukrs, belnr, gjahr, budat, blart,
    lifnr, augbl, auggj, kunnr, vname, cname, racct,
    txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.
  ELSEIF rad2 = &apos;X&apos;.
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
      WHERE rbukrs = @p_bukrs AND
      belnr IN @s_belnr AND budat IN @s_budat AND
      blart = @p_pytyp
*      blart IN (&apos;SZ&apos;,&apos;KZ&apos;,&apos;DZ&apos;)
      AND racct BETWEEN &apos;1101010000&apos; AND &apos;1101049999&apos; AND bschl &lt;&gt; &apos;50&apos;
      GROUP BY rbukrs, belnr, gjahr, budat, blart,
               lifnr, augbl, auggj, kunnr, vname, cname, racct,
               txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.

  ELSEIF op1 = &apos;X&apos;. &quot;Outgoing to Vendor
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
    WHERE rbukrs = @p_bukrs AND
    belnr IN @s_belnr AND budat IN @s_budat AND
    blart IN (&apos;KZ&apos;,&apos;DZ&apos;)
*      blart = @p_pytyp
    GROUP BY rbukrs, belnr, gjahr, budat, blart,
    lifnr, augbl, auggj, kunnr, vname, cname, racct,
    txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.

  ELSEIF op3 = &apos;X&apos;. &quot;Outgoing to Customer
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
    WHERE rbukrs = @p_bukrs AND
    belnr IN @s_belnr AND budat IN @s_budat AND
    blart IN (&apos;KZ&apos;,&apos;DZ&apos;)
*      blart = @p_pytyp
    GROUP BY rbukrs, belnr, gjahr, budat, blart,
    lifnr, augbl, auggj, kunnr, vname, cname, racct,
    txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.
  ELSEIF op2 = &apos;X&apos;.
    SELECT
    rbukrs, belnr, gjahr, budat, blart, lifnr, augbl, auggj,
    kunnr, vname, cname, racct, txt50, zuonr, sgtxt, koart,
    bschl, drcrk, rwcur, SUM( wsl ) AS wsl
    FROM zcds_fi_form_payment INTO CORRESPONDING FIELDS OF TABLE @lt_data
      WHERE rbukrs = @p_bukrs AND
      belnr IN @s_belnr AND budat IN @s_budat AND
*      blart IN (&apos;SZ&apos;,&apos;KZ&apos;,&apos;DZ&apos;) AND
      blart = @p_pytyp AND
      racct BETWEEN &apos;1101010000&apos; AND &apos;1101049999&apos; AND bschl = &apos;50&apos;
      GROUP BY rbukrs, belnr, gjahr, budat, blart,
               lifnr, augbl, auggj, kunnr, vname, cname, racct,
               txt50, zuonr, sgtxt, koart, bschl, drcrk, rwcur.
  ENDIF.


  SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_prnt
    WHERE rbukrs = @p_bukrs AND
          belnr IN @s_belnr AND budat IN @s_budat AND blart = @p_pytyp.

  IF lt_data IS INITIAL.
    MESSAGE &apos;Data not found&apos; TYPE &apos;S&apos; DISPLAY LIKE &apos;E&apos;.
  ELSE.
    IF rad1 = &apos;X&apos;. &quot;Incoming From Customer
      DELETE lt_data WHERE kunnr = &apos;&apos;.
      DELETE lt_data WHERE kunnr &lt;&gt; &apos;&apos; AND drcrk = &apos;S&apos;.
    ELSEIF rad3 = &apos;X&apos;. &quot;Incoming From Vendor
      DELETE lt_data WHERE lifnr = &apos;&apos;.
      DELETE lt_data WHERE lifnr &lt;&gt; &apos;&apos; AND drcrk = &apos;S&apos;.
    ELSEIF op3 = &apos;X&apos;. &quot;Outgoing To Customer
      DELETE lt_data WHERE kunnr = &apos;&apos;.
      DELETE lt_data WHERE kunnr &lt;&gt; &apos;&apos; AND drcrk = &apos;H&apos;.
    ELSEIF op1 = &apos;X&apos;. &quot;Outgoing To Vendor
      DELETE lt_data WHERE lifnr = &apos;&apos;.
      DELETE lt_data WHERE lifnr &lt;&gt; &apos;&apos; AND drcrk = &apos;H&apos;.
    ENDIF.

    SORT lt_data BY rbukrs gjahr belnr budat ASCENDING.
    CALL SCREEN 100.
  ENDIF.

ENDFORM.</source>
 </PROG>
 <PROG NAME="ZFI_F_PAYMENT_03" VARCL="X" SUBC="I" RMAND="110" RLOAD="E" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZFI_F_PAYMENT_03" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Include          ZFI_F_PAYMENT_03
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Module STATUS_0100 OUTPUT
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS &apos;PF100&apos;.
  SET TITLEBAR  &apos;TL100&apos; WITH &apos;Print Form Payment&apos;.

  PERFORM initial_screen.
ENDMODULE.
*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0100  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE  sy-ucomm.
    WHEN &apos;BACK&apos; OR &apos;EXIT&apos; OR &apos;CNCL&apos;.
      LEAVE TO SCREEN 0.

    WHEN &apos;PRINT&apos; OR &apos;BPRINT&apos;.
      REFRESH lt_row_no.
      CLEAR   l_valid.
      CALL METHOD ob_grid-&gt;check_changed_data
        IMPORTING
          e_valid = l_valid.

      IF l_valid EQ &apos;X&apos;.
*        CALL METHOD ob_grid-&gt;get_selected_rows
*          IMPORTING
*            et_row_no = lt_row_no[].
        READ TABLE lt_data WITH KEY zchbx = &apos;X&apos; TRANSPORTING NO FIELDS.
        IF sy-subrc = 0.
          PERFORM print_document.
        ELSE.
          MESSAGE &apos;No data selected&apos; TYPE &apos;S&apos; DISPLAY LIKE &apos;E&apos;.
        ENDIF.

      ENDIF.

    WHEN &apos;SALL&apos;.
      CLEAR ls_data-zchbx.
      ls_data-zchbx = &apos;X&apos;.
      DO 1 TIMES.
        MODIFY lt_data FROM ls_data TRANSPORTING zchbx WHERE zchbx = &apos;&apos;.
      ENDDO.

      CALL METHOD ob_grid-&gt;refresh_table_display.
    WHEN &apos;DALL&apos;.
      CLEAR ls_data-zchbx.
      DO 1 TIMES.
        MODIFY lt_data FROM ls_data TRANSPORTING zchbx WHERE zchbx = &apos;X&apos;.
      ENDDO.

      CALL METHOD ob_grid-&gt;refresh_table_display.
  ENDCASE.
ENDMODULE.

FORM initial_screen.
  IF ob_container IS INITIAL.
    CREATE OBJECT ob_container
      EXPORTING
        container_name = &apos;CONTAINER&apos;.

    CREATE OBJECT ob_grid
      EXPORTING
        i_parent = ob_container.

    CREATE OBJECT g_event_handler.
  ENDIF.

  PERFORM set_fieldcat.
  PERFORM set_lyout.

  SET HANDLER :
  g_event_handler-&gt;handle_hotspot_click FOR ob_grid,
  g_event_handler-&gt;handle_button_click FOR ob_grid,
*    g_event_handler-&gt;handle_double_click FOR ob_grid.
  g_event_handler-&gt;change_field FOR ob_grid,
  g_event_handler-&gt;change_field_finished FOR ob_grid.


  PERFORM alv_displ_out.

  CALL METHOD ob_grid-&gt;check_changed_data
    IMPORTING
      e_valid = w_valid.

  CALL METHOD ob_grid-&gt;register_edit_event
    EXPORTING
      i_event_id = cl_gui_alv_grid=&gt;mc_evt_enter.

  CALL METHOD ob_grid-&gt;refresh_table_display.

  CALL METHOD ob_grid-&gt;set_ready_for_input
    EXPORTING
      i_ready_for_input = 1.


ENDFORM.

FORM set_fieldcat.
  REFRESH it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;RBUKRS&apos;.
*  wa_fieldcat-scrtext_l = &apos;Reservation Number&apos;.
  wa_fieldcat-col_pos   = 1.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
  wa_fieldcat-key       = &apos;X&apos;.
*  wa_fieldcat-hotspot   = &apos;X&apos;.
*  wa_fieldcat-icon      = &apos;X&apos;.
*  wa_fieldcat-style     = cl_gui_alv_grid=&gt;mc_style_button.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;BELNR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Base date for reservation&apos;.
  wa_fieldcat-col_pos   = 2.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
  wa_fieldcat-key       = &apos;X&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;GJAHR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Cos&apos;.
  wa_fieldcat-col_pos   = 3.
  wa_fieldcat-key       = &apos;X&apos;.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;BUDAT&apos;.
*  wa_fieldcat-scrtext_l = &apos;Plant&apos;.
  wa_fieldcat-col_pos   = 4.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  IF rad1 = &apos;X&apos; or op3 = &apos;X&apos;.
    CLEAR wa_fieldcat.
    wa_fieldcat-fieldname = &apos;CNAME&apos;.
    wa_fieldcat-scrtext_l = &apos;Customer Name&apos;.
    wa_fieldcat-col_pos   = 6.
*    wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
    APPEND wa_fieldcat TO it_fieldcat.

    CLEAR wa_fieldcat.
    wa_fieldcat-fieldname = &apos;KUNNR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Plant&apos;.
    wa_fieldcat-col_pos   = 5.
    wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
    APPEND wa_fieldcat TO it_fieldcat.
  ELSEIF op1 = &apos;X&apos; OR rad3 = &apos;X&apos;.
    CLEAR wa_fieldcat.
    wa_fieldcat-fieldname = &apos;LIFNR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Plant&apos;.
    wa_fieldcat-col_pos   = 5.
    wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
    APPEND wa_fieldcat TO it_fieldcat.

    CLEAR wa_fieldcat.
    wa_fieldcat-fieldname = &apos;VNAME&apos;.
    wa_fieldcat-scrtext_l = &apos;Vendor Name&apos;.
    wa_fieldcat-col_pos   = 6.
*    wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
    APPEND wa_fieldcat TO it_fieldcat.
  ENDIF.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;WSL&apos;.
*  wa_fieldcat-scrtext_l = &apos;Company&apos;.
  wa_fieldcat-col_pos   = 7.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
  wa_fieldcat-cfieldname = &apos;RWCUR&apos;.
  APPEND wa_fieldcat TO it_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;RWCUR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Storage Location&apos;.
  wa_fieldcat-col_pos   = 7.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
*  wa_fieldcat-edit_mask  = &apos;X&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;ZUONR&apos;.
*  wa_fieldcat-scrtext_l = &apos;Storage Location&apos;.
  wa_fieldcat-col_pos   = 8.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
*  wa_fieldcat-edit_mask  = &apos;X&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;SGTXT&apos;.
*  wa_fieldcat-scrtext_l = &apos;Storage Location&apos;.
  wa_fieldcat-col_pos   = 9.
  wa_fieldcat-ref_table = &apos;ACDOCA&apos;.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
*  wa_fieldcat-edit_mask  = &apos;X&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = &apos;ZCHBX&apos;.
  wa_fieldcat-scrtext_l = &apos;Select&apos;.
  wa_fieldcat-col_pos   = 10.
*  wa_fieldcat-cfieldname = &apos;WAERS&apos;.
  wa_fieldcat-edit_mask  = &apos;X&apos;.
  wa_fieldcat-edit       = &apos;X&apos;.
  wa_fieldcat-checkbox   = &apos;X&apos;.
*  wa_fieldcat-style      = cl_gui_alv_grid=&gt;mc_style_enabled.
*  wa_fieldcat-datatype   = &apos;CURR&apos;.
  APPEND wa_fieldcat TO it_fieldcat.

ENDFORM.

FORM set_lyout .
  CLEAR is_lyout.
  is_lyout-zebra        = &apos;X&apos;.
  is_lyout-cwidth_opt   = &apos;X&apos;.
*  is_lyout-no_rowins    = &apos;X&apos;.
*  is_lyout-stylefname   = &apos;CSTYL&apos;.
*  is_lyout-info_fname   = &apos;CLINE&apos;.
*  is_lyout-ctab_fname   = &apos;CCELL&apos;.
ENDFORM.

FORM alv_displ_out.
  CALL METHOD ob_grid-&gt;set_table_for_first_display
    EXPORTING
*     is_variant                    = is_varnt      &quot;DISVARIANT
      i_save                        = &apos;A&apos;           &quot;CHAR1 - X:Global - U:User - A:All - Space:No
      i_default                     = &apos;X&apos;           &quot;CHAR1 - X:Allowed - Space:not
      is_layout                     = is_lyout      &quot;LVC_S_LAYO
*     is_print                      = is_print      &quot;LVC_S_PRNT
*     it_toolbar_excluding          = it_excld      &quot;UI_FUNCTIONS
    CHANGING
      it_outtab                     = lt_data
      it_fieldcatalog               = it_fieldcat      &quot;LVC_T_FCAT
*     it_sort                       = it_sort       &quot;LVC_T_SORT
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
ENDFORM.

FORM print_document.

  CLEAR : ls_ssfctrlop, ls_ssfcompop.
  ls_ssfctrlop-no_open  = &apos;X&apos;.
  ls_ssfctrlop-no_close = &apos;X&apos;.

  ls_ssfctrlop-no_dialog = abap_true.
  ls_ssfctrlop-preview   = abap_true.
*  ls_ssfcompop-tdnoprev  = abap_true.
  ls_ssfcompop-tddest    = &apos;PDF&apos;.
*  ls_ssfcompop-tdnoprint = &apos;X&apos;.

  CALL FUNCTION &apos;SSF_OPEN&apos;
    EXPORTING
      user_settings      = &apos; &apos;
      output_options     = ls_ssfcompop
      control_parameters = ls_ssfctrlop.

  CLEAR : formname, lv_fmname.

  IF rad1 = &apos;X&apos; OR rad3 = &apos;X&apos;.
    formname = &apos;ZFI_F_PAYMENT_BP&apos;.
  ELSEIF rad2 = &apos;X&apos;.
    formname = &apos;ZFI_F_PAYMENT_INC_OTHER&apos;.
  ELSEIF op1 = &apos;X&apos; OR op3 = &apos;X&apos;.
    formname = &apos;ZFI_F_PAYMENT_OUT_BP&apos;.
  ELSEIF op2 = &apos;X&apos;.
    formname = &apos;ZFI_F_PAYMENT_OUT_OTHER&apos;.
  ENDIF.

  CALL FUNCTION &apos;SSF_FUNCTION_MODULE_NAME&apos;
    EXPORTING
      formname           = formname    &quot; Form name
    IMPORTING
      fm_name            = lv_fmname
    EXCEPTIONS
      no_form            = 1
      no_function_module = 2
      OTHERS             = 3.
  IF sy-subrc &lt;&gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CLEAR ls_data.
  LOOP AT lt_data INTO ls_data WHERE zchbx = &apos;X&apos;.
    REFRESH lt_print.
    CLEAR ls_header.

    MOVE-CORRESPONDING ls_data TO ls_header.

    IF ls_header-rbukrs = &apos;SM&apos;.
      ls_header-flogo = &apos;SMI_LOGO&apos;.
    ELSEIF ls_header-rbukrs = &apos;MP&apos;.
      ls_header-flogo = &apos;MPM_LOGO&apos;.
    ELSEIF ls_header-rbukrs = &apos;GC&apos;.
      ls_header-flogo = &apos;GCNS_LOGO&apos;.
    ELSEIF ls_header-rbukrs = &apos;IT&apos;.
      ls_header-flogo = &apos;ITSS_LOGO&apos;.
    ELSEIF ls_header-rbukrs = &apos;IR&apos;.
      ls_header-flogo = &apos;IRNC_LOGO&apos;.
    ELSEIF ls_header-rbukrs = &apos;TS&apos;.
      ls_header-flogo = &apos;TSI_LOGO&apos;.
    ENDIF.

    SELECT concat( adrc~name1, adrc~name2 )
    FROM adrc INNER JOIN t001 ON adrc~addrnumber = t001~adrnr WHERE t001~bukrs = @ls_header-rbukrs
    INTO  @ls_header-butxt
    UP TO 1 ROWS.
    ENDSELECT.

    ls_header-customer = ls_data-cname.
    ls_header-vendor   = ls_data-vname.

    ls_header-cname = ls_header-butxt.

    IF rad1 = &apos;X&apos;. &quot;Incoming From Customer
      PERFORM form_incoming_from_customer.
    ELSEIF rad3 = &apos;X&apos;. &quot;Incoming From Vendor
      CLEAR ls_header-customer.
      ls_header-customer = ls_data-vname.
      PERFORM form_incoming_from_vendor.
    ELSEIF rad2 = &apos;X&apos;. &quot;Incoming from others
      PERFORM form_incoming_from_others.
    ELSEIF op1 = &apos;X&apos;. &quot;Outgoing to Vendor
      PERFORM form_outgoing_to_vendor.
    ELSEIF op3 = &apos;X&apos;. &quot;Outgoing to Customer
      CLEAR ls_header-vendor.
      ls_header-vendor   = ls_data-cname.
      PERFORM form_outgoing_to_customer.
    ELSEIF op2 = &apos;X&apos;. &quot;Outgoing to Others
      PERFORM form_outgoing_to_others.
    ENDIF.

*    IF rad1 = &apos;X&apos; OR op1 = &apos;X&apos;.
*      IF ls_data-augbl IS NOT INITIAL. &quot;Full Payment
*        IF rad1 = &apos;X&apos;. &quot;AR
*          REFRESH : lt_bsad, lt_clrdoc.
*          SELECT * FROM bsad_view INTO TABLE @lt_bsad
*            WHERE bukrs = @p_bukrs AND augbl = @ls_data-augbl AND gjahr = @ls_data-auggj.
*
*          CLEAR count.
*          DESCRIBE TABLE lt_bsad LINES count.
*          IF count &gt; 1.
*            DELETE lt_bsad WHERE belnr = ls_data-augbl AND gjahr = ls_data-gjahr AND bukrs = ls_data-rbukrs.
*          ENDIF.
*
*          IF lt_bsad IS NOT INITIAL.
*            REFRESH lt_clrdoc.
*            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*              FOR ALL ENTRIES IN @lt_bsad
*                WHERE rbukrs = @p_bukrs AND
*                      belnr  = @lt_bsad-belnr AND gjahr = @lt_bsad-gjahr AND drcrk = @i_shkzg.
*          ENDIF.
*
*
*          CLEAR : ls_prnt, ls_bsad.
*          LOOP AT lt_clrdoc INTO ls_prnt.
*            CLEAR : ls_print, ls_bkpf.
*
*            MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*            WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.
*
*            ls_print-rebzg = ls_prnt-belnr.
*
*            IF ls_bkpf-blart = &apos;RV&apos;.
*              CLEAR ls_print-zuonr.
*              SELECT SINGLE zuonr FROM bseg INTO ls_print-zuonr
*              WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.
*
*              ls_print-itmremark = |INV { ls_print-zuonr } ( { ls_bkpf-xblnr } )|.
*            ELSE.
*              CLEAR : ls_print-zuonr, ls_print-sgtxt.
*              SELECT SINGLE zuonr sgtxt FROM bseg INTO (ls_print-zuonr, ls_print-sgtxt)
*              WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs AND
*              augbl = ls_data-augbl.
*
*              ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } { ls_bkpf-xblnr } )|.
*            ENDIF.
*
*            APPEND ls_print TO lt_print.
*            CLEAR : ls_prnt, ls_bsad.
*          ENDLOOP.
*
*          REFRESH lt_clrdoc.
*          IF i_shkzg = &apos;H&apos;.
*            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*            WHERE rbukrs = @p_bukrs AND
*            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;S&apos;.
*          ELSE.
*            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*            WHERE rbukrs = @p_bukrs AND
*            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;H&apos;.
*          ENDIF.
*
*          CLEAR : ls_prnt, ls_bsad.
*          LOOP AT lt_clrdoc INTO ls_prnt.
*            CLEAR : ls_print, ls_bkpf.
*            MOVE-CORRESPONDING ls_prnt TO ls_print.
*            APPEND ls_print TO lt_print.
*            CLEAR : ls_prnt, ls_bsad.
*          ENDLOOP.
*
*        ELSEIF op1 = &apos;X&apos;. &quot;AP
*
**          ls_header-cname = &apos;Payment Account&apos;.
*          REFRESH : lt_bsak, lt_clrdoc.
*          SELECT * FROM bsak_view INTO TABLE @lt_bsak
*            WHERE bukrs = @p_bukrs AND augbl = @ls_data-augbl AND gjahr = @ls_data-auggj.
*
*          CLEAR count.
*          DESCRIBE TABLE lt_bsad LINES count.
*          IF count &gt; 1.
*            DELETE lt_bsak WHERE belnr = ls_data-augbl AND gjahr = ls_data-gjahr AND bukrs = ls_data-rbukrs.
*          ENDIF.
*
*          IF lt_bsak IS NOT INITIAL.
*            REFRESH : lt_clrdoc2, lt_clrdoc.
*            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
**            FOR ALL ENTRIES IN @lt_bsak
*            WHERE rbukrs = @p_bukrs AND
*            belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr. &quot;AND drcrk = @i_shkzg.
**            belnr  = @lt_bsak-belnr and gjahr = @lt_bsak-gjahr. &quot;AND drcrk = @i_shkzg.
*
*            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc2
*            FOR ALL ENTRIES IN @lt_bsak
*              WHERE rbukrs = @p_bukrs AND
*                belnr  = @ls_data-belnr AND augbl = &apos;&apos; AND gjahr = @lt_bsak-gjahr. &quot;AND drcrk = @i_shkzg.
*
**            DELETE lt_clrdoc  WHERE augbl IS INITIAL.
**            DELETE lt_clrdoc2 WHERE augbl IS INITIAL.
*          ENDIF.
*
*          CLEAR : ls_prnt, ls_bsak.
*          LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
*            CLEAR : ls_print, ls_bkpf.
*
*            MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*            WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.
*
*            IF ls_prnt-bschl = &apos;40&apos;.
*              ls_print-rebzg = ls_prnt-racct.
*              ls_print-itmremark = |{ ls_print-txt50 }|.
*            ELSE.
*              ls_print-rebzg = ls_prnt-belnr.
*              IF ls_print-zuonr IS NOT INITIAL.
*                ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
*              ELSE.
*                ls_print-itmremark = |{ ls_print-sgtxt }|.
*              ENDIF.
*            ENDIF.
*
*            APPEND ls_print TO lt_print.
*
*            CLEAR : ls_prnt, ls_bsad.
*          ENDLOOP.
*
*          &quot;Calculate Total Summary
*          REFRESH lt_total.
*          CLEAR ls_print.
*          LOOP AT lt_print INTO ls_print.
*            CLEAR ls_total.
*            READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
*            IF sy-subrc = 0.
*              ls_total-wsl = ls_total-wsl + ls_print-wsl.
*              MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
*            ELSE.
*              ls_total-rwcur = ls_print-rwcur.
*              ls_total-wsl   = ls_print-wsl.
*              APPEND ls_total TO lt_total.
*            ENDIF.
*            CLEAR ls_print.
*          ENDLOOP.
*
*
*          CLEAR : ls_prnt, ls_bsak.
*          LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
*            CLEAR : ls_print, ls_bkpf.
*
*            MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*            WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.
*
*            IF ls_prnt-bschl = &apos;40&apos;.
*              ls_print-rebzg = ls_prnt-racct.
*              ls_print-itmremark = |{ ls_print-txt50 }|.
*            ENDIF.
*
*            APPEND ls_print TO lt_print.
*            CLEAR : ls_prnt, ls_bsad.
*          ENDLOOP.
*
*          SORT lt_print BY belnr gjahr buzei.
**          DELETE lt_print WHERE itmremark IS INITIAL.
**          &quot;Calculate Total Summary
**          REFRESH lt_total.
**          CLEAR ls_print.
**          LOOP AT lt_print INTO ls_print.
**            CLEAR ls_total.
**            READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
**            IF sy-subrc = 0.
**              ls_total-wsl = ls_total-wsl + ls_print-wsl.
**              MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
**            ELSE.
**              ls_total-rwcur = ls_print-rwcur.
**              ls_total-wsl   = ls_print-wsl.
**              APPEND ls_total TO lt_total.
**            ENDIF.
**            CLEAR ls_print.
**          ENDLOOP.
*
**          REFRESH lt_clrdoc.
**          IF i_shkzg = &apos;H&apos;.
**            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
**            WHERE rbukrs = @p_bukrs AND
**            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;S&apos;.
**          ELSE.
**            SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
**            WHERE rbukrs = @p_bukrs AND
**            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;H&apos;.
**          ENDIF.
**
**          CLEAR : ls_prnt, ls_bsad.
**          LOOP AT lt_clrdoc INTO ls_prnt.
**            CLEAR : ls_print, ls_bkpf.
**            MOVE-CORRESPONDING ls_prnt TO ls_print.
**            APPEND ls_print TO lt_print.
**            CLEAR : ls_prnt, ls_bsad.
**          ENDLOOP.
*        ENDIF.
*      ELSE. &quot;Partial Payment
*        CLEAR ls_prnt.
*        LOOP AT lt_prnt INTO ls_prnt WHERE belnr = ls_data-belnr AND rbukrs = ls_data-rbukrs AND
*                gjahr = ls_data-gjahr AND drcrk = &apos;S&apos;.
*          CLEAR ls_print.
*          MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*          CLEAR ls_bkpf.
*          IF ls_print-rebzg IS INITIAL.
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*              WHERE belnr = ls_print-belnr AND bukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
*          ELSE.
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*              WHERE belnr = ls_print-rebzg AND bukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
*          ENDIF.
*
*          IF ls_bkpf-blart = &apos;RV&apos;.
*            CLEAR ls_print-zuonr.
*            SELECT SINGLE zuonr FROM bseg INTO ls_print-zuonr
*            WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.
*
*            ls_print-itmremark = |INV { ls_print-zuonr } ( { ls_bkpf-xblnr } )|.
*
*          ELSE.
**            CLEAR : ls_print-zuonr, ls_print-sgtxt.
**            SELECT SINGLE zuonr sgtxt FROM bseg INTO (ls_print-zuonr, ls_print-sgtxt)
**            WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.
*
*            IF ls_prnt-bschl = &apos;40&apos;.
*              ls_print-rebzg = ls_prnt-racct.
*              ls_print-itmremark = |{ ls_print-txt50 }|.
*            ELSE.
**              ls_print-rebzg = ls_data-belnr.
**              ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } { ls_bkpf-xblnr } )|.
*              ls_print-rebzg = ls_prnt-belnr.
*              IF ls_print-zuonr IS NOT INITIAL.
*                ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
*              ELSE.
*                ls_print-itmremark = |{ ls_print-sgtxt }|.
*              ENDIF.
*            ENDIF.
*          ENDIF.
*
*          APPEND ls_print TO lt_print.
*          CLEAR ls_prnt.
*        ENDLOOP.
*
*        &quot;Calculate Total Summary
*        REFRESH lt_total.
*        CLEAR ls_print.
*        LOOP AT lt_print INTO ls_print.
*          CLEAR ls_total.
*          READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
*          IF sy-subrc = 0.
*            ls_total-wsl = ls_total-wsl + ls_print-wsl.
*            MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
*          ELSE.
*            ls_total-rwcur = ls_print-rwcur.
*            ls_total-wsl   = ls_print-wsl.
*            APPEND ls_total TO lt_total.
*          ENDIF.
*          CLEAR ls_print.
*        ENDLOOP.
*
*        LOOP AT lt_prnt INTO ls_prnt WHERE belnr = ls_data-belnr AND rbukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr
*          AND drcrk = &apos;H&apos;.
*          CLEAR ls_print.
*          MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*          CLEAR ls_bkpf.
*          IF ls_print-rebzg IS INITIAL.
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*            WHERE belnr = ls_print-belnr AND bukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
*          ELSE.
*            SELECT SINGLE * FROM bkpf INTO ls_bkpf
*            WHERE belnr = ls_print-rebzg AND bukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
*          ENDIF.
*
*          IF ls_bkpf-blart = &apos;RV&apos;.
*            CLEAR ls_print-zuonr.
*            SELECT SINGLE zuonr FROM bseg INTO ls_print-zuonr
*            WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.
*
*            ls_print-itmremark = |INV { ls_print-zuonr } ( { ls_bkpf-xblnr } )|.
*
*          ELSE.
**            CLEAR : ls_print-zuonr, ls_print-sgtxt.
**            SELECT SINGLE zuonr sgtxt FROM bseg INTO (ls_print-zuonr, ls_print-sgtxt)
**            WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.
*
*            IF ls_prnt-bschl = &apos;40&apos;.
*              ls_print-rebzg = ls_prnt-racct.
*              ls_print-itmremark = |{ ls_print-txt50 }|.
*            ELSE.
**              ls_print-rebzg = ls_data-belnr.
**              ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } { ls_bkpf-xblnr } )|.
*              ls_print-rebzg = ls_prnt-belnr.
*              IF ls_print-zuonr IS NOT INITIAL.
*                ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
*              ELSE.
*                ls_print-itmremark = |{ ls_print-sgtxt }|.
*              ENDIF.
*            ENDIF.
*          ENDIF.
*
*          APPEND ls_print TO lt_print.
*          CLEAR ls_prnt.
*        ENDLOOP.
*
*        SORT lt_print BY belnr gjahr buzei.
*      ENDIF.
*    ELSE.
*
*
*
*      IF ls_data-blart = &apos;KZ&apos; AND op2 = &apos;X&apos;.
*        REFRESH : lt_clrdoc2, lt_clrdoc.
*        SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
**            FOR ALL ENTRIES IN @lt_bsak
*        WHERE rbukrs = @p_bukrs AND
*        belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr AND racct NOT IN (&apos;7101020100&apos;,&apos;7101020200&apos;). &quot;AND drcrk = @i_shkzg.
*
*        CLEAR : ls_prnt, ls_bsak.
*        LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
*          CLEAR : ls_print, ls_bkpf.
*
*          MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*          SELECT SINGLE * FROM bkpf INTO ls_bkpf
*          WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.
*
*          IF ls_prnt-bschl = &apos;40&apos;.
*            ls_print-rebzg = ls_prnt-racct.
*            ls_print-itmremark = |{ ls_print-txt50 }|.
*          ELSE.
*            ls_print-rebzg = ls_prnt-belnr.
*            IF ls_print-zuonr IS NOT INITIAL.
*              ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
*            ELSE.
*              ls_print-itmremark = |{ ls_print-sgtxt }|.
*            ENDIF.
*          ENDIF.
*
*          APPEND ls_print TO lt_print.
*
*          CLEAR : ls_prnt, ls_bsad.
*        ENDLOOP.
*
*        &quot;Calculate Total Summary
*        REFRESH lt_total.
*        CLEAR ls_print.
*        LOOP AT lt_print INTO ls_print.
*          CLEAR ls_total.
*          READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
*          IF sy-subrc = 0.
*            ls_total-wsl = ls_total-wsl + ls_print-wsl.
*            MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
*          ELSE.
*            ls_total-rwcur = ls_print-rwcur.
*            ls_total-wsl   = ls_print-wsl.
*            APPEND ls_total TO lt_total.
*          ENDIF.
*          CLEAR ls_print.
*        ENDLOOP.
*
*
*        CLEAR : ls_prnt, ls_bsak.
*        LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
*          CLEAR : ls_print, ls_bkpf.
*
*          MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*          SELECT SINGLE * FROM bkpf INTO ls_bkpf
*          WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.
*
*          IF ls_prnt-bschl = &apos;40&apos;.
*            ls_print-rebzg = ls_prnt-racct.
*            ls_print-itmremark = |{ ls_print-txt50 }|.
*          ENDIF.
*
*          APPEND ls_print TO lt_print.
*          CLEAR : ls_prnt, ls_bsad.
*        ENDLOOP.
*
*        SORT lt_print BY belnr gjahr buzei.
*      ELSE.
*        CLEAR ls_prnt.
*        LOOP AT lt_prnt INTO ls_prnt WHERE belnr = ls_data-belnr AND rbukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
*          CLEAR ls_print.
*          MOVE-CORRESPONDING ls_prnt TO ls_print.
*
*          ls_print-bschl     = ls_print-bschl.
*          ls_print-itmremark = ls_print-txt50.
*
*          APPEND ls_print TO lt_print.
*          CLEAR ls_prnt.
*        ENDLOOP.
*      ENDIF.
*    ENDIF.


    CALL FUNCTION lv_fmname
      EXPORTING
        control_parameters = ls_ssfctrlop
        output_options     = ls_ssfcompop
        user_settings      = &apos; &apos;
        header             = ls_header
      IMPORTING
        job_output_info    = ls_out_info
      TABLES
        items              = lt_print
        lt_total           = lt_total
      EXCEPTIONS
        formatting_error   = 1
        internal_error     = 2
        send_error         = 3
        user_canceled      = 4
        OTHERS             = 5.

    CLEAR ls_data.
  ENDLOOP.

  CALL FUNCTION &apos;SSF_CLOSE&apos;
    IMPORTING
      job_output_info = ls_out_info.
ENDFORM.</source>
 </PROG>
 <PROG NAME="ZFI_F_PAYMENT_04" VARCL="X" SUBC="I" RMAND="110" RLOAD="E" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZFI_F_PAYMENT_04" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Include          ZFI_F_PAYMENT_04
*&amp;---------------------------------------------------------------------*
FORM form_incoming_from_vendor.
  SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*    FOR ALL ENTRIES IN @lt_bsad
      WHERE rbukrs = @p_bukrs AND
            belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr. &quot;AND drcrk = @i_shkzg.

  CLEAR : ls_prnt, ls_bsad.
  LOOP AT lt_clrdoc INTO ls_prnt.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
    WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    ls_print-rebzg = ls_prnt-belnr.

    IF ls_bkpf-blart = &apos;RV&apos;.
      CLEAR ls_print-zuonr.
      SELECT SINGLE zuonr FROM bseg INTO ls_print-zuonr
      WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.

      ls_print-itmremark = |INV { ls_print-zuonr } ( { ls_bkpf-xblnr } )|.
    ELSE.
      CLEAR : ls_print-zuonr, ls_print-sgtxt.
      SELECT SINGLE zuonr sgtxt FROM bseg INTO (ls_print-zuonr, ls_print-sgtxt)
      WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs AND
      augbl = ls_data-augbl.

      ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } { ls_bkpf-xblnr } )|.
    ENDIF.

    APPEND ls_print TO lt_print.
    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.
ENDFORM.

FORM form_incoming_from_customer.
  REFRESH : lt_bsad, lt_clrdoc.
*  SELECT * FROM bsad_view INTO TABLE @lt_bsad
*  WHERE bukrs = @p_bukrs AND augbl = @ls_data-augbl AND gjahr = @ls_data-auggj.
*
*  CLEAR count.
*  DESCRIBE TABLE lt_bsad LINES count.
*  IF count &gt; 1.
*    DELETE lt_bsad WHERE belnr = ls_data-augbl AND gjahr = ls_data-gjahr AND bukrs = ls_data-rbukrs.
*  ENDIF.
*
*  IF lt_bsad IS NOT INITIAL.
*    REFRESH lt_clrdoc.
*    SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*    FOR ALL ENTRIES IN @lt_bsad
*    WHERE rbukrs = @p_bukrs AND
*    belnr  = @lt_bsad-belnr AND gjahr = @lt_bsad-gjahr AND drcrk = @i_shkzg.
*  ENDIF.

  SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*  FOR ALL ENTRIES IN @lt_bsad
    WHERE rbukrs = @p_bukrs AND
      belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr. &quot;AND drcrk = @i_shkzg.

  CLEAR : ls_prnt, ls_bsad.
  LOOP AT lt_clrdoc INTO ls_prnt.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
      WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    ls_print-rebzg = ls_prnt-belnr.

    IF ls_bkpf-blart = &apos;RV&apos;.
      CLEAR ls_print-zuonr.
      SELECT SINGLE zuonr FROM bseg INTO ls_print-zuonr
      WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs.

      ls_print-itmremark = |INV { ls_print-zuonr } ( { ls_bkpf-xblnr } )|.
    ELSE.
      CLEAR : ls_print-zuonr, ls_print-sgtxt.
      SELECT SINGLE zuonr sgtxt FROM bseg INTO (ls_print-zuonr, ls_print-sgtxt)
      WHERE belnr = ls_bkpf-belnr AND gjahr = ls_bkpf-gjahr AND bukrs = ls_bkpf-bukrs AND
      augbl = ls_data-augbl.

      ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } { ls_bkpf-xblnr } )|.
    ENDIF.

    APPEND ls_print TO lt_print.
    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.

*  REFRESH lt_clrdoc.
*  IF i_shkzg = &apos;H&apos;.
*    SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*      WHERE rbukrs = @p_bukrs AND
*            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;S&apos;.
*  ELSE.
*    SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*      WHERE rbukrs = @p_bukrs AND
*            belnr  = @ls_data-augbl AND gjahr = @ls_data-gjahr AND drcrk = &apos;H&apos;.
*  ENDIF.
*
*  CLEAR : ls_prnt, ls_bsad.
*  LOOP AT lt_clrdoc INTO ls_prnt.
*    CLEAR : ls_print, ls_bkpf.
*    MOVE-CORRESPONDING ls_prnt TO ls_print.
*    APPEND ls_print TO lt_print.
*    CLEAR : ls_prnt, ls_bsad.
*  ENDLOOP.
ENDFORM.

FORM form_incoming_from_others.
  IF ls_data-blart = &apos;KZ&apos;.
    REFRESH : lt_clrdoc2, lt_clrdoc.
    SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*            FOR ALL ENTRIES IN @lt_bsak
    WHERE rbukrs = @p_bukrs AND
    belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr AND racct NOT IN (&apos;7101020100&apos;,&apos;7101020200&apos;). &quot;AND drcrk = @i_shkzg.

    CLEAR : ls_prnt, ls_bsak.
    LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
      CLEAR : ls_print, ls_bkpf.

      MOVE-CORRESPONDING ls_prnt TO ls_print.

      SELECT SINGLE * FROM bkpf INTO ls_bkpf
      WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

      IF ls_prnt-bschl = &apos;40&apos;.
        ls_print-rebzg = ls_prnt-racct.
        ls_print-itmremark = |{ ls_print-txt50 }|.
      ELSE.
        ls_print-rebzg = ls_prnt-belnr.
        IF ls_print-zuonr IS NOT INITIAL.
          ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
        ELSE.
          ls_print-itmremark = |{ ls_print-sgtxt }|.
        ENDIF.
      ENDIF.

      APPEND ls_print TO lt_print.

      CLEAR : ls_prnt, ls_bsad.
    ENDLOOP.

    &quot;Calculate Total Summary
    REFRESH lt_total.
    CLEAR ls_print.
    LOOP AT lt_print INTO ls_print.
      CLEAR ls_total.
      READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
      IF sy-subrc = 0.
        ls_total-wsl = ls_total-wsl + ls_print-wsl.
        MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
      ELSE.
        ls_total-rwcur = ls_print-rwcur.
        ls_total-wsl   = ls_print-wsl.
        APPEND ls_total TO lt_total.
      ENDIF.
      CLEAR ls_print.
    ENDLOOP.


    CLEAR : ls_prnt, ls_bsak.
    LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
      CLEAR : ls_print, ls_bkpf.

      MOVE-CORRESPONDING ls_prnt TO ls_print.

      SELECT SINGLE * FROM bkpf INTO ls_bkpf
      WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

      IF ls_prnt-bschl = &apos;40&apos;.
        ls_print-rebzg = ls_prnt-racct.
        ls_print-itmremark = |{ ls_print-txt50 }|.
      ENDIF.

      APPEND ls_print TO lt_print.
      CLEAR : ls_prnt, ls_bsad.
    ENDLOOP.
  ELSE.
    CLEAR ls_prnt.
    LOOP AT lt_prnt INTO ls_prnt WHERE belnr = ls_data-belnr AND rbukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
      CLEAR ls_print.
      MOVE-CORRESPONDING ls_prnt TO ls_print.

      ls_print-bschl     = ls_print-bschl.
      ls_print-itmremark = ls_print-txt50.

      APPEND ls_print TO lt_print.
      CLEAR ls_prnt.
    ENDLOOP.
  ENDIF.


  SORT lt_print BY belnr gjahr buzei.
ENDFORM.

FORM form_outgoing_to_vendor.
  REFRESH : lt_bsak, lt_clrdoc.
*  SELECT * FROM bsak_view INTO TABLE @lt_bsak
*  WHERE bukrs = @p_bukrs AND augbl = @ls_data-augbl AND gjahr = @ls_data-auggj.
*
*  CLEAR count.
*  DESCRIBE TABLE lt_bsad LINES count.
*  IF count &gt; 1.
*    DELETE lt_bsak WHERE belnr = ls_data-augbl AND gjahr = ls_data-gjahr AND bukrs = ls_data-rbukrs.
*  ENDIF.

  REFRESH : lt_clrdoc2, lt_clrdoc.
  SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
    WHERE rbukrs = @p_bukrs AND
          belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr.

  CLEAR : ls_prnt, ls_bsak.
  LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
    WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    IF ls_prnt-bschl = &apos;40&apos;.
      ls_print-rebzg = ls_prnt-racct.
      ls_print-itmremark = |{ ls_print-txt50 }|.
    ELSE.
      ls_print-rebzg = ls_prnt-belnr.
      IF ls_print-zuonr IS NOT INITIAL.
        ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
      ELSE.
        ls_print-itmremark = |{ ls_print-sgtxt }|.
      ENDIF.
    ENDIF.

    APPEND ls_print TO lt_print.

    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.

  &quot;Calculate Total Summary
  REFRESH lt_total.
  CLEAR ls_print.
  LOOP AT lt_print INTO ls_print.
    CLEAR ls_total.
    READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
    IF sy-subrc = 0.
      ls_total-wsl = ls_total-wsl + ls_print-wsl.
      MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
    ELSE.
      ls_total-rwcur = ls_print-rwcur.
      ls_total-wsl   = ls_print-wsl.
      APPEND ls_total TO lt_total.
    ENDIF.
    CLEAR ls_print.
  ENDLOOP.


  CLEAR : ls_prnt, ls_bsak.
  LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
    WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    IF ls_prnt-bschl = &apos;40&apos;.
      ls_print-rebzg = ls_prnt-racct.
      ls_print-itmremark = |{ ls_print-txt50 }|.
    ENDIF.

    APPEND ls_print TO lt_print.
    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.

  SORT lt_print BY belnr gjahr buzei.
ENDFORM.

FORM form_outgoing_to_customer.
  REFRESH : lt_bsak, lt_clrdoc.
  SELECT * FROM bsak_view INTO TABLE @lt_bsak
  WHERE bukrs = @p_bukrs AND augbl = @ls_data-augbl AND gjahr = @ls_data-auggj.

  CLEAR count.
  DESCRIBE TABLE lt_bsad LINES count.
  IF count &gt; 1.
    DELETE lt_bsak WHERE belnr = ls_data-augbl AND gjahr = ls_data-gjahr AND bukrs = ls_data-rbukrs.
  ENDIF.

  REFRESH : lt_clrdoc2, lt_clrdoc.
  SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
    WHERE rbukrs = @p_bukrs AND
      belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr.

  CLEAR : ls_prnt, ls_bsak.
  LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
    WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    IF ls_prnt-bschl = &apos;40&apos;.
      ls_print-rebzg = ls_prnt-racct.
      ls_print-itmremark = |{ ls_print-txt50 }|.
    ELSE.
      ls_print-rebzg = ls_prnt-belnr.
      IF ls_print-zuonr IS NOT INITIAL.
        ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
      ELSE.
        ls_print-itmremark = |{ ls_print-sgtxt }|.
      ENDIF.
    ENDIF.

    APPEND ls_print TO lt_print.

    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.

  &quot;Calculate Total Summary
  REFRESH lt_total.
  CLEAR ls_print.
  LOOP AT lt_print INTO ls_print.
    CLEAR ls_total.
    READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
    IF sy-subrc = 0.
      ls_total-wsl = ls_total-wsl + ls_print-wsl.
      MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
    ELSE.
      ls_total-rwcur = ls_print-rwcur.
      ls_total-wsl   = ls_print-wsl.
      APPEND ls_total TO lt_total.
    ENDIF.
    CLEAR ls_print.
  ENDLOOP.


  CLEAR : ls_prnt, ls_bsak.
  LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
    CLEAR : ls_print, ls_bkpf.

    MOVE-CORRESPONDING ls_prnt TO ls_print.

    SELECT SINGLE * FROM bkpf INTO ls_bkpf
    WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

    IF ls_prnt-bschl = &apos;40&apos;.
      ls_print-rebzg = ls_prnt-racct.
      ls_print-itmremark = |{ ls_print-txt50 }|.
    ENDIF.

    APPEND ls_print TO lt_print.
    CLEAR : ls_prnt, ls_bsad.
  ENDLOOP.

  SORT lt_print BY belnr gjahr buzei.
ENDFORM.

FORM form_outgoing_to_others.
  IF ls_data-blart = &apos;KZ&apos;.
    REFRESH : lt_clrdoc2, lt_clrdoc.
    SELECT * FROM zcds_fi_form_payment INTO TABLE @lt_clrdoc
*            FOR ALL ENTRIES IN @lt_bsak
    WHERE rbukrs = @p_bukrs AND
    belnr  = @ls_data-belnr AND gjahr = @ls_data-gjahr AND racct NOT IN (&apos;7101020100&apos;,&apos;7101020200&apos;). &quot;AND drcrk = @i_shkzg.

    CLEAR : ls_prnt, ls_bsak.
    LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;S&apos;.
      CLEAR : ls_print, ls_bkpf.

      MOVE-CORRESPONDING ls_prnt TO ls_print.

      SELECT SINGLE * FROM bkpf INTO ls_bkpf
      WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

      IF ls_prnt-bschl = &apos;40&apos;.
        ls_print-rebzg = ls_prnt-racct.
        ls_print-itmremark = |{ ls_print-txt50 }|.
      ELSE.
        ls_print-rebzg = ls_prnt-belnr.
        IF ls_print-zuonr IS NOT INITIAL.
          ls_print-itmremark = |{ ls_print-sgtxt } ( INV { ls_print-zuonr } )|.
        ELSE.
          ls_print-itmremark = |{ ls_print-sgtxt }|.
        ENDIF.
      ENDIF.

      APPEND ls_print TO lt_print.

      CLEAR : ls_prnt, ls_bsad.
    ENDLOOP.

    &quot;Calculate Total Summary
    REFRESH lt_total.
    CLEAR ls_print.
    LOOP AT lt_print INTO ls_print.
      CLEAR ls_total.
      READ TABLE lt_total INTO ls_total WITH KEY rwcur = ls_print-rwcur.
      IF sy-subrc = 0.
        ls_total-wsl = ls_total-wsl + ls_print-wsl.
        MODIFY lt_total FROM ls_total TRANSPORTING wsl WHERE rwcur = ls_print-rwcur.
      ELSE.
        ls_total-rwcur = ls_print-rwcur.
        ls_total-wsl   = ls_print-wsl.
        APPEND ls_total TO lt_total.
      ENDIF.
      CLEAR ls_print.
    ENDLOOP.


    CLEAR : ls_prnt, ls_bsak.
    LOOP AT lt_clrdoc INTO ls_prnt WHERE drcrk = &apos;H&apos;.
      CLEAR : ls_print, ls_bkpf.

      MOVE-CORRESPONDING ls_prnt TO ls_print.

      SELECT SINGLE * FROM bkpf INTO ls_bkpf
      WHERE belnr = ls_prnt-belnr AND bukrs = ls_prnt-rbukrs AND gjahr = ls_prnt-gjahr.

      IF ls_prnt-bschl = &apos;40&apos;.
        ls_print-rebzg = ls_prnt-racct.
        ls_print-itmremark = |{ ls_print-txt50 }|.
      ENDIF.

      APPEND ls_print TO lt_print.
      CLEAR : ls_prnt, ls_bsad.
    ENDLOOP.
  ELSE.
    CLEAR ls_prnt.
    LOOP AT lt_prnt INTO ls_prnt WHERE belnr = ls_data-belnr AND rbukrs = ls_data-rbukrs AND gjahr = ls_data-gjahr.
      CLEAR ls_print.
      MOVE-CORRESPONDING ls_prnt TO ls_print.

      ls_print-bschl     = ls_print-bschl.
      ls_print-itmremark = ls_print-txt50.

      APPEND ls_print TO lt_print.
      CLEAR ls_prnt.
    ENDLOOP.
  ENDIF.


  SORT lt_print BY belnr gjahr buzei.
ENDFORM.</source>
 </PROG>
 <PROG NAME="ZFI_F_PAYMENT_CLS" VARCL="X" SUBC="I" RMAND="110" RLOAD="E" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZFI_F_PAYMENT_CLS" LENGTH="25 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Include          ZFI_F_PAYMENT_CLS
*&amp;---------------------------------------------------------------------*
CLASS lcl_event_handler DEFINITION DEFERRED.
DATA :
  g_event_handler  TYPE REF TO lcl_event_handler,
  g_event_handler2 TYPE REF TO lcl_event_handler,
  wa_stable        TYPE lvc_s_stbl.

CLASS lcl_event_handler DEFINITION .
  PUBLIC SECTION .
    CLASS-METHODS:
      handle_hotspot_click FOR EVENT hotspot_click OF cl_gui_alv_grid
        IMPORTING e_row_id e_column_id es_row_no,

      handle_button_click FOR EVENT button_click OF cl_gui_alv_grid
        IMPORTING es_col_id es_row_no,

      handle_double_click FOR EVENT double_click OF cl_gui_alv_grid
        IMPORTING e_row e_column es_row_no,

      change_field FOR EVENT data_changed OF cl_gui_alv_grid
        IMPORTING er_data_changed,

      change_field_finished FOR EVENT data_changed_finished OF cl_gui_alv_grid
        IMPORTING e_modified et_good_cells.

*    METHODS :
*      suppress.

  PRIVATE SECTION.
    DATA: error_in_data TYPE c.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION .

  METHOD handle_hotspot_click .
    DATA: l_mess   TYPE string,
          l_row(2) TYPE c.
    BREAK-POINT.
    WRITE es_row_no-row_id TO l_row.
    CONCATENATE &apos;Hotspot click at: &apos; e_column_id-fieldname &apos;in&apos;
    l_row &apos;row.&apos;
    INTO l_mess SEPARATED BY space.
    MESSAGE l_mess TYPE &apos;I&apos;.    &quot;here for example an info message will pop up with cell address
  ENDMETHOD .

  METHOD handle_button_click.
    DATA l_row TYPE c LENGTH 10.
    DATA: ls_good TYPE lvc_s_modi.
    DATA: lwa_mod_cell TYPE lvc_s_modi.
    DATA : et_row_no  TYPE lvc_t_roid.
*          lwa_mod      TYPE ty_mod.
    BREAK-POINT.

    l_row = es_row_no-row_id.
    CASE es_col_id-fieldname.
      WHEN &apos;ZBUTTON&apos;.
*        CLEAR ls_item.
*        READ TABLE lt_item_tmp INDEX es_row_no-row_id INTO ls_item.
*        SUBMIT zmme_gir_change WITH p_rsnum = ls_item-rsnum AND RETURN.

*      SET PARAMETER ID &apos;BES&apos; FIELD wa_details-ebeln.
*      CALL TRANSACTION &apos;ME23N&apos; AND SKIP FIRST SCREEN.
*        CLEAR v_answer.
*        CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
*          EXPORTING
*            titlebar              = &apos;Confirmation&apos;
*            text_question         = &apos;Do you want to create characteristic ?&apos;
*            icon_button_1         = &apos;ICON_OKAY&apos;
*            icon_button_2         = &apos;ICON_CANCEL&apos;
*            display_cancel_button = &apos;&apos;
*            popup_type            = &apos;ICON_MESSAGE_WARNING&apos;
*          IMPORTING
*            answer                = v_answer.
*
*        IF v_answer = &apos;1&apos;.
*          CLEAR wa_print.
*          READ TABLE it_print INDEX es_row_no-row_id INTO wa_print.
**
*        ELSEIF v_answer = &apos;2&apos;.
*          MESSAGE &apos;Exit attempt cancelled&apos; TYPE &apos;I&apos; DISPLAY LIKE &apos;E&apos;.
*        ENDIF.

    ENDCASE.
  ENDMETHOD.

  METHOD handle_double_click.
*    e_row e_column es_row_no
    BREAK-POINT.
  ENDMETHOD.

  METHOD change_field.
    DATA l_modification TYPE lvc_s_modi.
*    BREAK-POINT.
*    LOOP AT er_data_changed-&gt;mt_mod_cells INTO l_modification.
** Test the change.
*      CLEAR wa_details.
*      READ TABLE it_details INTO wa_details INDEX l_modification-row_id.
*      wa_details-netwr1 = wa_details-netwr1 - wa_details-netwr2.
*
*      IF ( l_modification-value / 100 ) &gt; wa_details-netwr1.
*        MESSAGE &apos;Open value &lt; input payment&apos; TYPE &apos;S&apos; DISPLAY LIKE &apos;E&apos;.
*
*        clear l_modification-value.
*        wa_details-netwr3 = 0.
*        MODIFY it_details INDEX l_modification-row_id
*          FROM wa_details TRANSPORTING netwr3.
*        EXIT.
*      ENDIF.
*
*      wa_details-netwr3 = l_modification-value.
*
*      MODIFY it_details INDEX l_modification-row_id
*        FROM wa_details TRANSPORTING netwr3.
*    ENDLOOP.

*    CALL METHOD ob_grid-&gt;refresh_table_display.
*    BREAK-POINT.
  ENDMETHOD.

  METHOD change_field_finished.
    DATA : ls_good_cells  TYPE  lvc_s_modi.

*    et_good_cells
    LOOP AT et_good_cells INTO ls_good_cells.
*      CLEAR wa_details.
*      wa_details-netwr3 = 0.

*      CALL FUNCTION &apos;CATS_NUMERIC_INPUT_CHECK&apos;
*        EXPORTING
*          input            =
*         INTERNAL         = &apos;X&apos;
*       IMPORTING
*         OUTPUT           =
*       EXCEPTIONS
*         NO_NUMERIC       = 1
*         OTHERS           = 2
*                .

*      MODIFY it_details INDEX ls_good_cells-row_id
*        FROM wa_details TRANSPORTING netwr3.
    ENDLOOP.

    CALL METHOD ob_grid-&gt;refresh_table_display.
*    e_modified et_good_cells
*    et_good_cells-
*    BREAK-POINT.
  ENDMETHOD.
ENDCLASS.


AT SELECTION-SCREEN OUTPUT.
  CLEAR : i_shkzg, p_pytyp.
  IF rad1 = &apos;X&apos;.
    p_pytyp = &apos;DZ&apos;.
    i_shkzg = &apos;H&apos;.
    LOOP AT SCREEN.
      IF screen-name CS &apos;S_LIFNR&apos;.
        screen-active = 0.
      ELSEIF screen-name CS &apos;S_KUNNR&apos;.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ELSEIF rad3 = &apos;X&apos;.
    p_pytyp = &apos;DZ&apos;.
    i_shkzg = &apos;H&apos;.
    LOOP AT SCREEN.
      IF screen-name CS &apos;S_LIFNR&apos;.
        screen-active = 1.
      ELSEIF screen-name CS &apos;S_KUNNR&apos;.
        screen-active = 0.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ELSEIF op1 = &apos;X&apos;.
    p_pytyp = &apos;KZ&apos;.
    i_shkzg = &apos;S&apos;.
    LOOP AT SCREEN.
      IF screen-name CS &apos;S_LIFNR&apos;.
        screen-active = 1.
      ELSEIF screen-name CS &apos;S_KUNNR&apos;.
        screen-active = 0.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ELSEIF op3 = &apos;X&apos;.
    p_pytyp = &apos;KZ&apos;.
    i_shkzg = &apos;S&apos;.
    LOOP AT SCREEN.
      IF screen-name CS &apos;S_LIFNR&apos;.
        screen-active = 0.
      ELSEIF screen-name CS &apos;S_KUNNR&apos;.
        screen-active = 1.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ELSE.
    p_pytyp = &apos;SZ&apos;.
    LOOP AT SCREEN.
      IF screen-name CS &apos;S_LIFNR&apos;.
        screen-active = 0.
      ELSEIF screen-name CS &apos;S_KUNNR&apos;.
        screen-active = 0.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ENDIF.</source>
 </PROG>
 <TABL TABNAME="ZSF_PAYMENT_HDR" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Form Payment Header" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1" QUOTA_MAX_FIELDS="00000" QUOTA_MAX_BYTES="0000000" QUOTA_SHARE_PARTNER="000" QUOTA_SHARE_CUSTOMER="000">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="RLDNR" DDLANGUAGE="E" POSITION="0001" ROLLNAME="RLDNR" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="RLDNR" ROUTPUTLEN="000000" MEMORYID="GLN" LOGFLAG="X" HEADLEN="02" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="T881" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Ledger" REPTEXT="Ld" SCRTEXT_S="Ledger" SCRTEXT_M="Ledger" SCRTEXT_L="Ledger" DOMNAME3L="RLDNR" SHLPORIGIN="D" SHLPNAME="H_T881" SHLPFIELD="RLDNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="LEDGER" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="RBUKRS" DDLANGUAGE="E" POSITION="0002" ROLLNAME="BUKRS" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" DOMNAME="BUKRS" ROUTPUTLEN="000000" MEMORYID="BUK" LOGFLAG="X" HEADLEN="04" SCRLEN1="06" SCRLEN2="15" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="T001" MASK="  CHARE" MASKLEN="0000" DDTEXT="Company Code" REPTEXT="CoCd" SCRTEXT_S="CoCode" SCRTEXT_M="Company Code" SCRTEXT_L="Company Code" DOMNAME3L="BUKRS" SHLPORIGIN="D" SHLPNAME="C_T001" SHLPFIELD="BUKRS" DEPTH="00" COMPTYPE="E" DEFFDNAME="COMP_CODE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="BELNR" DDLANGUAGE="E" POSITION="0003" ROLLNAME="BELNR_D" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="BELNR" ROUTPUTLEN="000000" MEMORYID="BLN" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document Number of an Accounting Document" REPTEXT="DocumentNo" SCRTEXT_S="DocumentNo" SCRTEXT_M="Document Number" SCRTEXT_L="Document Number" DOMNAME3L="BELNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="AC_DOC_NO" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="GJAHR" DDLANGUAGE="E" POSITION="0004" ROLLNAME="GJAHR" ADMINFIELD="0" INTTYPE="N" INTLEN="000008" DOMNAME="GJAHR" ROUTPUTLEN="000000" MEMORYID="GJR" LOGFLAG="X" HEADLEN="04" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="NUMC" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" CONVEXIT="GJAHR" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Fiscal Year" REPTEXT="Year" SCRTEXT_S="Fiscal Yr" SCRTEXT_M="Fiscal Year" SCRTEXT_L="Fiscal Year" DOMNAME3L="GJAHR" DEPTH="00" COMPTYPE="E" DEFFDNAME="FISC_YEAR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="BUDAT" DDLANGUAGE="E" POSITION="0005" ROLLNAME="BUDAT" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATUM" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Posting Date in the Document" REPTEXT="Pstng Date" SCRTEXT_S="Pstng Date" SCRTEXT_M="Posting Date" SCRTEXT_L="Posting Date" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" DEFFDNAME="PSTNG_DATE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="RWCUR" DDLANGUAGE="E" POSITION="0006" ROLLNAME="RWCUR" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" DOMNAME="WAERS" ROUTPUTLEN="000000" MEMORYID="FWS" LOGFLAG="X" HEADLEN="05" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CUKY" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" ENTITYTAB="TCURC" MASK="  CUKYE" MASKLEN="0000" DDTEXT="Currency key of the original transaction currency" REPTEXT="Crcy" SCRTEXT_S="Or.trns.cu" SCRTEXT_M="Or.trans.currny" SCRTEXT_L="Or.transctn.currency" DOMNAME3L="WAERS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="FLOGO" DDLANGUAGE="E" POSITION="0007" ROLLNAME="CHAR50" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" DOMNAME="TEXT50" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Comment" REPTEXT="c" SCRTEXT_S="c" SCRTEXT_M="c" SCRTEXT_L="c" DOMNAME3L="TEXT50" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="CNAME" DDLANGUAGE="E" POSITION="0008" ROLLNAME="CHAR120" ADMINFIELD="0" INTTYPE="C" INTLEN="000240" DOMNAME="CHAR120" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000120" OUTPUTLEN="000120" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="char120" DOMNAME3L="CHAR120" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="BUTXT" DDLANGUAGE="E" POSITION="0009" ROLLNAME="CHAR120" ADMINFIELD="0" INTTYPE="C" INTLEN="000240" DOMNAME="CHAR120" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000120" OUTPUTLEN="000120" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="char120" DOMNAME3L="CHAR120" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="VENDOR" DDLANGUAGE="E" POSITION="0010" ROLLNAME="CHAR120" ADMINFIELD="0" INTTYPE="C" INTLEN="000240" DOMNAME="CHAR120" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000120" OUTPUTLEN="000120" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="char120" DOMNAME3L="CHAR120" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_HDR" FIELDNAME="CUSTOMER" DDLANGUAGE="E" POSITION="0011" ROLLNAME="CHAR120" ADMINFIELD="0" INTTYPE="C" INTLEN="000240" DOMNAME="CHAR120" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000120" OUTPUTLEN="000120" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="char120" DOMNAME3L="CHAR120" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZSF_PAYMENT_ITEM" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Structure Form Payment Items" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1" QUOTA_MAX_FIELDS="00000" QUOTA_MAX_BYTES="0000000" QUOTA_SHARE_PARTNER="000" QUOTA_SHARE_CUSTOMER="000">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="RLDNR" DDLANGUAGE="E" POSITION="0001" ROLLNAME="FINS_LEDGER" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="FINS_LEDGER" ROUTPUTLEN="000000" MEMORYID="GLN_FLEX" HEADLEN="02" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="FINSC_LEDGER" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Ledger in General Ledger Accounting" REPTEXT="Ld" SCRTEXT_S="Ledger" SCRTEXT_M="Ledger" SCRTEXT_L="Ledger" DOMNAME3L="FINS_LEDGER" SHLPORIGIN="D" SHLPNAME="FINS_LEDGER" SHLPFIELD="RLDNR" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="RBUKRS" DDLANGUAGE="E" POSITION="0002" ROLLNAME="BUKRS" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" DOMNAME="BUKRS" ROUTPUTLEN="000000" MEMORYID="BUK" LOGFLAG="X" HEADLEN="04" SCRLEN1="06" SCRLEN2="15" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="T001" MASK="  CHARE" MASKLEN="0000" DDTEXT="Company Code" REPTEXT="CoCd" SCRTEXT_S="CoCode" SCRTEXT_M="Company Code" SCRTEXT_L="Company Code" DOMNAME3L="BUKRS" SHLPORIGIN="D" SHLPNAME="C_T001" SHLPFIELD="BUKRS" DEPTH="00" COMPTYPE="E" DEFFDNAME="COMP_CODE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="BELNR" DDLANGUAGE="E" POSITION="0003" ROLLNAME="BELNR_D" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="BELNR" ROUTPUTLEN="000000" MEMORYID="BLN" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document Number of an Accounting Document" REPTEXT="DocumentNo" SCRTEXT_S="DocumentNo" SCRTEXT_M="Document Number" SCRTEXT_L="Document Number" DOMNAME3L="BELNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="AC_DOC_NO" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="GJAHR" DDLANGUAGE="E" POSITION="0004" ROLLNAME="GJAHR" ADMINFIELD="0" INTTYPE="N" INTLEN="000008" DOMNAME="GJAHR" ROUTPUTLEN="000000" MEMORYID="GJR" LOGFLAG="X" HEADLEN="04" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="NUMC" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" CONVEXIT="GJAHR" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Fiscal Year" REPTEXT="Year" SCRTEXT_S="Fiscal Yr" SCRTEXT_M="Fiscal Year" SCRTEXT_L="Fiscal Year" DOMNAME3L="GJAHR" DEPTH="00" COMPTYPE="E" DEFFDNAME="FISC_YEAR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="BUZEI" DDLANGUAGE="E" POSITION="0005" ROLLNAME="BUZEI" ADMINFIELD="0" INTTYPE="N" INTLEN="000006" DOMNAME="BUZEI" ROUTPUTLEN="000000" MEMORYID="BUZ" LOGFLAG="X" HEADLEN="03" SCRLEN1="05" SCRLEN2="10" SCRLEN3="15" DTELMASTER="D" DATATYPE="NUMC" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Number of Line Item Within Accounting Document" REPTEXT="Itm" SCRTEXT_S="Item" SCRTEXT_M="Item" SCRTEXT_L="Item" DOMNAME3L="BUZEI" DEPTH="00" COMPTYPE="E" DEFFDNAME="ITEM_NUM" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="AUGBL" DDLANGUAGE="E" POSITION="0006" ROLLNAME="AUGBL" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="BELNR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="00" SCRLEN2="12" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document Number of the Clearing Document" REPTEXT="Clrng doc." SCRTEXT_M="Clrng doc." SCRTEXT_L="Clearing Document" DOMNAME3L="BELNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="CLR_DOC_NO" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="AUGDT" DDLANGUAGE="E" POSITION="0007" ROLLNAME="AUGDT" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATUM" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Clearing Date" REPTEXT="Clearing" SCRTEXT_S="Clearing" SCRTEXT_M="Clearing" SCRTEXT_L="Clearing Date" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" DEFFDNAME="CLEAR_DATE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="AUGGJ" DDLANGUAGE="E" POSITION="0008" ROLLNAME="AUGGJ" ADMINFIELD="0" INTTYPE="N" INTLEN="000008" DOMNAME="GJAHR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="04" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="NUMC" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" CONVEXIT="GJAHR" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Fiscal Year of Clearing Document" REPTEXT="Year" SCRTEXT_S="Fisc. Year" SCRTEXT_M="Clrg Fiscal Yr" SCRTEXT_L="Clearing Fiscal Year" DOMNAME3L="GJAHR" DEPTH="00" COMPTYPE="E" DEFFDNAME="CLR_DOC_YEAR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="REBZG" DDLANGUAGE="E" POSITION="0009" ROLLNAME="REBZG" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="BELNR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="12" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document No. of the Invoice to Which the Transaction Belongs" REPTEXT="Inv. Ref." SCRTEXT_S="Inv. Ref." SCRTEXT_M="Invoice Ref." SCRTEXT_L="Invoice Reference" DOMNAME3L="BELNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="INV_REF" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="REBZJ" DDLANGUAGE="E" POSITION="0010" ROLLNAME="REBZJ" ADMINFIELD="0" INTTYPE="N" INTLEN="000008" DOMNAME="GJAHR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="NUMC" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" CONVEXIT="GJAHR" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Fiscal Year of the Relevant Invoice (for Credit Memo)" SCRTEXT_S="Year" SCRTEXT_M="Fiscal Year" SCRTEXT_L="Fiscal Year" DOMNAME3L="GJAHR" DEPTH="00" COMPTYPE="E" DEFFDNAME="INV_YEAR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="KTOPL" DDLANGUAGE="E" POSITION="0011" ROLLNAME="KTOPL" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" DOMNAME="KTOPL" ROUTPUTLEN="000000" MEMORYID="KPL" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="T004" MASK="  CHARE" MASKLEN="0000" DDTEXT="Chart of Accounts" REPTEXT="Chart of Accounts" SCRTEXT_S="Chrt/Accts" SCRTEXT_M="Chart of Accts" SCRTEXT_L="Chart of Accounts" DOMNAME3L="KTOPL" SHLPORIGIN="D" SHLPNAME="C_KTOPL" SHLPFIELD="KTOPL" DEPTH="00" COMPTYPE="E" DEFFDNAME="CHRT_ACCTS" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="BUDAT" DDLANGUAGE="E" POSITION="0012" ROLLNAME="BUDAT" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATUM" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Posting Date in the Document" REPTEXT="Pstng Date" SCRTEXT_S="Pstng Date" SCRTEXT_M="Posting Date" SCRTEXT_L="Posting Date" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" DEFFDNAME="PSTNG_DATE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="RACCT" DDLANGUAGE="E" POSITION="0013" ROLLNAME="RACCT" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="SAKNR" ROUTPUTLEN="000000" MEMORYID="ACC" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="SKA1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Account Number" REPTEXT="Account" SCRTEXT_S="Account" SCRTEXT_M="Account Number" SCRTEXT_L="Account Number" DOMNAME3L="SAKNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="GL_ACCOUNT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="TXT50" DDLANGUAGE="E" POSITION="0014" ROLLNAME="TXT50_SKAT" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" DOMNAME="TEXT50" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="50" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="G/L Account Long Text" REPTEXT="Long Text" SCRTEXT_S="Long Text" SCRTEXT_M="Long Text" SCRTEXT_L="G/L Acct Long Text" DOMNAME3L="TEXT50" DEPTH="00" COMPTYPE="E" DEFFDNAME="LONG_TEXT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="PRCTR" DDLANGUAGE="E" POSITION="0015" ROLLNAME="PRCTR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="PRCTR" ROUTPUTLEN="000000" MEMORYID="PRC" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="CEPC" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Profit Center" REPTEXT="Profit Ctr" SCRTEXT_S="Profit Ctr" SCRTEXT_M="Profit Center" SCRTEXT_L="Profit Center" DOMNAME3L="PRCTR" SHLPORIGIN="D" SHLPNAME="PRCTR_EMPTY" SHLPFIELD="PRCTR" DEPTH="00" COMPTYPE="E" DEFFDNAME="PROFIT_CTR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="WSL" DDLANGUAGE="E" POSITION="0016" ROLLNAME="FINS_VWCUR12" ADMINFIELD="0" INTTYPE="P" INTLEN="000012" REFTABLE="ZSF_PAYMENT_ITEM" REFFIELD="RWCUR" DOMNAME="WERTV12" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CURR" LENG="000023" OUTPUTLEN="000031" DECIMALS="000002" SIGNFLAG="X" MASK="  CURRE" MASKLEN="0000" DDTEXT="Amount in Transaction Currency" REPTEXT="Amnt in TransactionCrcy" SCRTEXT_S="Amnt in TC" SCRTEXT_M="Amnt in Trans. Crcy" SCRTEXT_L="Amount in Transaction Currency" DOMNAME3L="WERTV12" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="RWCUR" DDLANGUAGE="E" POSITION="0017" ROLLNAME="FINS_CURRW" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" DOMNAME="WAERS" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="06" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CUKY" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" ENTITYTAB="TCURC" MASK="  CUKYE" MASKLEN="0000" DDTEXT="Transaction Currency" REPTEXT="TrCrcy" SCRTEXT_S="Trans Crcy" SCRTEXT_M="Transaction Currency" SCRTEXT_L="Transaction Currency" DOMNAME3L="WAERS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="DMBE2" DDLANGUAGE="E" POSITION="0018" ROLLNAME="DMBE2" ADMINFIELD="0" INTTYPE="P" INTLEN="000012" REFTABLE="ZSF_PAYMENT_ITEM" REFFIELD="HWAE2" DOMNAME="AFLE13D2O16N_TO_23D2O30N" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="12" SCRLEN3="15" DTELMASTER="D" DATATYPE="CURR" LENG="000023" OUTPUTLEN="000030" DECIMALS="000002" CONVEXIT="AU132" MASK="  CURRE" MASKLEN="0000" DDTEXT="Amount in Second Local Currency or Global Currency" REPTEXT="LC2 Amount" SCRTEXT_S="LC2 Amount" SCRTEXT_M="LC2 Amount" SCRTEXT_L="LC2 Amount" DOMNAME3L="AFLE13D2O16N_TO_23D2O30N" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="HWAE2" DDLANGUAGE="E" POSITION="0019" ROLLNAME="HWAE2" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" DOMNAME="WAERS" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="05" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CUKY" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" ENTITYTAB="TCURC" MASK="  CUKYE" MASKLEN="0000" DDTEXT="Currency Key of Second Local Currency" REPTEXT="LCur2" SCRTEXT_S="Loc.curr2" SCRTEXT_M="Local curr. 2" SCRTEXT_L="Local currency 2" DOMNAME3L="WAERS" DEPTH="00" COMPTYPE="E" DEFFDNAME="LC2_CURR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="DRCRK" DDLANGUAGE="E" POSITION="0020" ROLLNAME="SHKZG" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="SHKZG" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Debit/Credit Indicator" REPTEXT="D/C" SCRTEXT_S="D/C Indic." SCRTEXT_M="Debit/Credit" SCRTEXT_L="Debit/Credit ind" DOMNAME3L="SHKZG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" DEFFDNAME="DB_CR_IND" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="BSCHL" DDLANGUAGE="E" POSITION="0021" ROLLNAME="BSCHL" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="BSCHL" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="02" SCRLEN1="07" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="TBSL" MASK="  CHARE" MASKLEN="0000" DDTEXT="Posting Key" REPTEXT="PK" SCRTEXT_S="Key" SCRTEXT_M="Posting Key" SCRTEXT_L="Posting Key" DOMNAME3L="BSCHL" DEPTH="00" COMPTYPE="E" DEFFDNAME="POST_KEY" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="UMSKZ" DDLANGUAGE="E" POSITION="0022" ROLLNAME="UMSKZ" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="UMSKZ" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="02" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" ENTITYTAB="T074U" MASK="  CHARE" MASKLEN="0000" DDTEXT="Special G/L Indicator" REPTEXT="SG" SCRTEXT_S="Sp.G/LInd." SCRTEXT_M="Special G/L Ind" SCRTEXT_L="Special G/L Ind." DOMNAME3L="UMSKZ" DEPTH="00" COMPTYPE="E" DEFFDNAME="SP_GL_IND" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="LIFNR" DDLANGUAGE="E" POSITION="0023" ROLLNAME="LIFNR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="LIFNR" ROUTPUTLEN="000000" MEMORYID="LIF" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="LFA1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Account Number of Supplier" REPTEXT="Supplier" SCRTEXT_S="Supplier" SCRTEXT_M="Supplier" SCRTEXT_L="Supplier" DOMNAME3L="LIFNR" SHLPORIGIN="D" SHLPNAME="KRED_C" SHLPFIELD="LIFNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="VENDOR_NO" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="KUNNR" DDLANGUAGE="E" POSITION="0024" ROLLNAME="KUNNR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="KUNNR" ROUTPUTLEN="000000" MEMORYID="KUN" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="KNA1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Customer Number" REPTEXT="Customer" SCRTEXT_S="Customer" SCRTEXT_M="Customer" SCRTEXT_L="Customer" DOMNAME3L="KUNNR" SHLPORIGIN="D" SHLPNAME="C_KUNNR" SHLPFIELD="KUNNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="CUSTOMER" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="BLART" DDLANGUAGE="E" POSITION="0025" ROLLNAME="BLART" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="BLART" ROUTPUTLEN="000000" MEMORYID="BAR" LOGFLAG="X" HEADLEN="10" SCRLEN1="06" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="T003" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document Type" REPTEXT="Doc. Type" SCRTEXT_S="Type" SCRTEXT_M="Document Type" SCRTEXT_L="Document Type" DOMNAME3L="BLART" DEPTH="00" COMPTYPE="E" DEFFDNAME="DOC_TYPE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="ZUONR" DDLANGUAGE="E" POSITION="0026" ROLLNAME="DZUONR" ADMINFIELD="0" INTTYPE="C" INTLEN="000036" DOMNAME="ZUONR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="18" SCRLEN1="10" SCRLEN2="12" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000018" OUTPUTLEN="000018" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Assignment number" REPTEXT="Assignment" SCRTEXT_S="Assign." SCRTEXT_M="Assignment" SCRTEXT_L="Assignment" DOMNAME3L="ZUONR" DEPTH="00" COMPTYPE="E" DEFFDNAME="ALLOC_NMBR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="SGTXT" DDLANGUAGE="E" POSITION="0027" ROLLNAME="SGTXT" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" DOMNAME="TEXT50" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="50" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Item Text" REPTEXT="Text" SCRTEXT_S="Text" SCRTEXT_M="Text" SCRTEXT_L="Text" DOMNAME3L="TEXT50" DEPTH="00" COMPTYPE="E" DEFFDNAME="ITEM_TEXT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="ZCHBX" DDLANGUAGE="E" POSITION="0028" ROLLNAME="CHAR1" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Single-Character Flag" DOMNAME3L="CHAR1" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="VNAME" DDLANGUAGE="E" POSITION="0029" ROLLNAME="AD_NAME1" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="TEXT40" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="40" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Name 1" REPTEXT="Name" SCRTEXT_S="Name" SCRTEXT_M="Name" SCRTEXT_L="Name" DOMNAME3L="TEXT40" DEPTH="00" COMPTYPE="E" DEFFDNAME="NAME" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="CNAME" DDLANGUAGE="E" POSITION="0030" ROLLNAME="AD_NAME1" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="TEXT40" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="40" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Name 1" REPTEXT="Name" SCRTEXT_S="Name" SCRTEXT_M="Name" SCRTEXT_L="Name" DOMNAME3L="TEXT40" DEPTH="00" COMPTYPE="E" DEFFDNAME="NAME" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZSF_PAYMENT_ITEM" FIELDNAME="ITMREMARK" DDLANGUAGE="E" POSITION="0031" ROLLNAME="CHAR120" ADMINFIELD="0" INTTYPE="C" INTLEN="000240" DOMNAME="CHAR120" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000120" OUTPUTLEN="000120" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="char120" DOMNAME3L="CHAR120" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
</nugget>
